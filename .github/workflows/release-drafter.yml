name: Generate Release Notes

on:
  pull_request_target:
    types: [ closed, edited ]
    branches: [ 'main' ]

jobs:
  check-branch:
    runs-on: ubuntu-latest
    steps:
      - name: check branch
        if: github.event.pull_request.merged == true && github.base_ref == 'main'
        run: echo ${{ github.head_ref }}

  release-notes:
    runs-on: ubuntu-latest
    needs: [ check-branch ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Add label
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var label;
            
	    console.log(${{ github.event.pull_request.base.ref }});
            if( '${{ github.event.pull_request.base.ref }}'.indexOf('hotfix') != -1 ){
              label = 'patch';
            } else {
              label = 'minor';
            }
            const payload = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: label
            };
            await github.issues.addLabels(payload);

      - name: Release drafter
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
