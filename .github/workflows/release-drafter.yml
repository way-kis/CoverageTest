name: Generate Release Notes

on:
  pull_request_target:
    types: [ closed ]
    branches: [ 'main' ]

jobs:
  check-branch:
    runs-on: ubuntu-latest
    steps:
      - name: check branch
        if: github.event.pull_request.merged == true && github.base_ref == 'main'
        run: echo ${{ github.head_ref }}

  release-notes:
    runs-on: ubuntu-latest
    needs: [ check-branch ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Release drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter.yml

      - name: Add RC postfix to draft release
        run: sed -i 's/^tag_template:.*/tag_template: v${{ steps.vars.outpu ts.next_version }}-RC/' .github/release-drafter.yml

      - name: Commit changes
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add .
          git commit -m "Update release-drafter configuration"
          git push

      - name: Get tags
        id: get_tags
        run: |
          TAG=$(git ls-remote --tags origin | awk '{print $2}' | grep -v '{}' | awk -F '/' '{print $3}' | sort -rV | head -n1)
          echo "Latest tag is $TAG"
          echo "::set-output name=latest_tag::$TAG"

      - name: Create PR
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -d '{ "title": "${{ steps.get_tags.outputs.latest_tag }} Automated PR", "body": "version : ${{ steps.get_tags.outputs.latest_tag }}\nAutomatically generated PR", "head": "'main'", "base": "develop" }' \
               "https://api.github.com/repos/${{ github.repository }}/pulls"
